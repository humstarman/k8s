# Calico Version v3.0.1
# https://docs.projectcalico.org/v3.0/releases#v3.0.1
# This manifest includes the following component versions:
#   calico/node:v3.0.1
#   calico/cni:v2.0.0
#   calico/kube-controllers:v2.0.0

# This ConfigMap is used to configure a self-hosted Calico installation.
kind: ConfigMap
apiVersion: v1
metadata:
  name: calico-config
  namespace: kube-system
data:
  # Configure this with the location of your etcd cluster.
  etcd_endpoints: "https://172.31.78.215:2379,https://172.31.78.216:2379,https://172.31.78.217:2379"

  # Configure the Calico backend to use.
  calico_backend: "bird"

  # The CNI network configuration to install on each node.
  cni_network_config: |-
    {
      "name": "k8s-pod-network",
      "cniVersion": "0.3.0",
      "plugins": [
        {
            "type": "calico",
            "etcd_endpoints": "__ETCD_ENDPOINTS__",
            "etcd_key_file": "__ETCD_KEY_FILE__",
            "etcd_cert_file": "__ETCD_CERT_FILE__",
            "etcd_ca_cert_file": "__ETCD_CA_CERT_FILE__",
            "log_level": "info",
            "mtu": 1500,
            "ipam": {
                "type": "calico-ipam"
            },
            "policy": {
                "type": "k8s",
                "k8s_api_root": "https://__KUBERNETES_SERVICE_HOST__:__KUBERNETES_SERVICE_PORT__",
                "k8s_auth_token": "__SERVICEACCOUNT_TOKEN__"
            },
            "kubernetes": {
                "kubeconfig": "__KUBECONFIG_FILEPATH__"
            }
        },
        {
          "type": "portmap",
          "snat": true,
          "capabilities": {"portMappings": true}
        }
      ]
    }

  # If you're using TLS enabled etcd uncomment the following.
  # You must also populate the Secret below with these files.
  etcd_ca: "/calico-secrets/etcd-ca"
  etcd_cert: "/calico-secrets/etcd-cert"
  etcd_key: "/calico-secrets/etcd-key"

---

# The following contains k8s Secrets for use with a TLS enabled etcd cluster.
# For information on populating Secrets, see http://kubernetes.io/docs/user-guide/secrets/
apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: calico-etcd-secrets
  namespace: kube-system
data:
  # Populate the following files with etcd TLS configuration if desired, but leave blank if
  # not using TLS for etcd.
  # This self-hosted install expects three files with the following names.  The values
  # should be base64 encoded strings of the entire contents of each file.
  # etcd-key: null
  # etcd-cert: null
  # etcd-ca: null
  etcd-key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBb1NLcUcrT2ZjSUxhSGU1NXpCVVNPVDRZYnNDSzZ5b2RpK0FtZHJubmc1VER2dTJDCjVnem5iVUw5a2UyYi9WUFNEcm1QVXFBVGpxOHNTeHlqU2hRVzhXQUJQRHNBZTZnNDlPR2szNzVnUlVzMGFtVk4KVU1UWG5CM3VBS0ZaQXEyTTFIcTRmV3lHM1hpNkVOZVhTZkVCMDJSa0dXdng2ZzZ3eG1MK0c3RDJncGFieHpKRQpBRm05SGJZVmdCTHNwUE4xSkZrZS9ZQi9QSGlLa3dIbmpnK3VFQlkwbmE1QzdUR3dNcDRoNE51ay82Ky80NnpQCi9GeXczdEtyVTBkR1VEQ0lNQUhXV0dmQzAxWDcrVG1tM3FtUitaRWNXcnVpcU4yQi9BSXhTNzA0aExLK1BzRDgKMXZuTnRzQjlhekVlb1Y5L085Q1J6ZkVOZUpOWG85SjJPby9KZHdJREFRQUJBb0lCQVFDYkQvdTVTT3ZXM3VVOQpabzlvMkdJb0dkeHpQL0N2YTJEeGlTd2FscjMyL3NMOFNoM3Nla0IvQWJkNHBicTJKdUorN3d6QVMzRm1ucVkyClJnSFJPTkgzU0JjSU9oTTE3R1diS2tWNlZ2N1gwQTVKME9COU9GL3dTVkVPNURYL0FMb0VnM0JrcW5xQ1NEcHUKR0xuckd2VlIwMHNNdDdjZU1UTG1ScjhZTU15WVR3VzVoR2FsSVMzTjFFZC9FY0pCcVp0K1JXdEcxWG9FZlFOQgo5Y29BTWVyUG9xU1ErLzhEYnVzSDFRM1FGUU5BRE5xR1puMXBQMVhaNksyckNMRWNRaDJsck5LdFdsTnFUaE1sCitIdHVtdVJ3TnlKMlh5emlkZXhKeWRnSnRXVThLSktGSnEzUUVrWVdlTGIwWmxndUJJYTJLZ2FPUnlYNDBuN2kKYktua09yM0JBb0dCQU5NajZYY1E4VThDS0RENW1CaDg4bHRldm16RXc4bGtuTG1Gd0tyYUllZkd5SGd6NnR1RAo4NEdIdmRLZFNzb21hN0M3Z1BRT2Q5Z0xRd29xM1kxbU5zb1dXL3JRd0FmME02ekdTK2N2NGh4cmJpanh0WU5FCkUvU0ZkMlRCNjdiSVRWTE1mcTNjblFMbFhURmorWWg0MUswdlJQa2Qwbk5ENnpudmhiTE9WNXhYQW9HQkFNTmUKOHBsbTNLOW1RVU1pbVVSbEVqS0JRNjFyS1VZSWlrd1c3SERzbUdDcXJXZm5FbUloNXpacjZQSG5BRWszcUZHSgpHOEhTWEpCWE9mTStZVGpKUzFINUJMRE1Xa2duRjlTdlNva3E2MmxBWFUyQ2ZBcG1zQkw4bXFGbU5hU09yYSsvClE4dFlFR29ISmYxU0FJM1F0eEFEZVY4ellOT296TXZDQzhwNlh3ZmhBb0dBS05EUFovbjVlL21CeFgzcWZnbGgKWEhKalEybUNJNk4wZkpTem14T1I3RmxNRlppTHRTVzc0L1ZXcDZsS2RPdWFjODY3YmZLQ0RseVcrQmN6UHd0YwpXaEthYzFENVhsQkIwUXVBVHMrOTJScVhjQWpSdXU5bElDYlEzc1J5Q2FLTStBMmFDNGdUUGlVU3IrS1FzV1lTClR1eE5YQTc4eU5WL1duTElHTG0weS84Q2dZQmxEamk0Um0rQ1BvY2xYY0Vma3BRT0ViVGEvK0lTZXBwbWJ6a1AKMUNHaFpzZFpSam5KRHJaVS9RNDZDZjJvNGFRcndKcmQ3NXkzZ0piV0RmOGw2MkVOWHB3aGd5Snp6ZHpTdzNUdgpiSWJtSTBmZnJzM1FaM3RONXVGbytNQm9oUENzUm1lZng4Wjl3WUxSL0ZlVEExR2RjOTZVOHJOejZBMCttL21UCld5YktvUUtCZ1FDSUNGTmFpTnFkenlWNXJMMzY2dFJJK3dtRTlwL3BxenBQMXQxc25TZkgvT3MyczNIVTMwMGIKc0V5WGR4QnJvcE1WTHNRNXR2VFRWMkFPSzVzejBqV3Nlc2V4Y3RqRlBQQU96cUp2TVhHL0lyYis3cU56MWp1NwppRHdqem9mRlFJSW5uajFUc0FGNVVwSE50VHRLOGRpbndPck1EWE1jeTNhbzh4OUxSNVZtTlE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo= 
  etcd-cert: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUQ5akNDQXQ2Z0F3SUJBZ0lVYWcxMGY2VU9hZElpRjNSNDdGNlhia3VZQXdjd0RRWUpLb1pJaHZjTkFRRUwKQlFBd1pURUxNQWtHQTFVRUJoTUNRMDR4RURBT0JnTlZCQWdUQjBKbGFVcHBibWN4RURBT0JnTlZCQWNUQjBKbAphVXBwYm1jeEREQUtCZ05WQkFvVEEyczRjekVQTUEwR0ExVUVDeE1HVTNsemRHVnRNUk13RVFZRFZRUURFd3ByCmRXSmxjbTVsZEdWek1CNFhEVEU0TURJeE1qQXdOREV3TUZvWERUSTRNREl4TURBd05ERXdNRm93WHpFTE1Ba0cKQTFVRUJoTUNRMDR4RURBT0JnTlZCQWdUQjBKbGFVcHBibWN4RURBT0JnTlZCQWNUQjBKbGFVcHBibWN4RERBSwpCZ05WQkFvVEEyczRjekVQTUEwR0ExVUVDeE1HVTNsemRHVnRNUTB3Q3dZRFZRUURFd1JsZEdOa01JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQW9TS3FHK09mY0lMYUhlNTV6QlVTT1Q0WWJzQ0sKNnlvZGkrQW1kcm5uZzVURHZ1MkM1Z3puYlVMOWtlMmIvVlBTRHJtUFVxQVRqcThzU3h5alNoUVc4V0FCUERzQQplNmc0OU9HazM3NWdSVXMwYW1WTlVNVFhuQjN1QUtGWkFxMk0xSHE0Zld5RzNYaTZFTmVYU2ZFQjAyUmtHV3Z4CjZnNnd4bUwrRzdEMmdwYWJ4ekpFQUZtOUhiWVZnQkxzcFBOMUpGa2UvWUIvUEhpS2t3SG5qZyt1RUJZMG5hNUMKN1RHd01wNGg0TnVrLzYrLzQ2elAvRnl3M3RLclUwZEdVRENJTUFIV1dHZkMwMVg3K1RtbTNxbVIrWkVjV3J1aQpxTjJCL0FJeFM3MDRoTEsrUHNEODF2bk50c0I5YXpFZW9WOS9POUNSemZFTmVKTlhvOUoyT28vSmR3SURBUUFCCm80R2pNSUdnTUE0R0ExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUIKQlFVSEF3SXdEQVlEVlIwVEFRSC9CQUl3QURBZEJnTlZIUTRFRmdRVTUxcExjRU5YWjVVMjVhWG9VMHlaSWJweApQbkF3SHdZRFZSMGpCQmd3Rm9BVU1QZk5rV2s4MWxhdTBadGZGTVArd0J1WTh5d3dJUVlEVlIwUkJCb3dHSWNFCmZ3QUFBWWNFckI5TzE0Y0VyQjlPMkljRXJCOU8yVEFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBbUJLWEowam0KL2hqeG0wRHFxelNhQktCVzYySEt2cXRrSGZnNkVSY1NFelJ2ZmtyVGxJbEVaREJ5Ynh3Vk9EMGxKOTJHa3BnQgpFV1FaY0ZmUUh0S0syZno3aUdkcndpUll4WjVKcmVOL2o3RFVacU9wYitHRDFGMnBsZ0I5VkEwUFNueEtFYTdOCnhOS2daU0I0YnRIaVJTWFd6akI3d0RqdjVxN3Y2V1FGTkVxdU0vaFFVc1ZRQ0tKclJDSnVvMk9nY0VaS0Nqd0cKUmpaaG9qTG9ZWDhxK2VRaW5wbTdhUzBTT0lBZkhmTU9TS0Q3V2FhRkczY2NHSzhnVEVwaG9qUWk0ZTcrSHlzcwpHWlcwcFFGVG5qaFI1cHh4dG5hVjczRjYvQ0QxOXpJK3BvaXRnVWtMMkQxTlcrUHAvTUh1Nk5UdzVhQTB0bXB4CkFlaXFEMEMxRXRVTzJRPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  etcd-ca: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUR2akNDQXFhZ0F3SUJBZ0lVVmU3dzBUeGdLV0k0bFlQU1k1RHZjMDAvRURVd0RRWUpLb1pJaHZjTkFRRUwKQlFBd1pURUxNQWtHQTFVRUJoTUNRMDR4RURBT0JnTlZCQWdUQjBKbGFVcHBibWN4RURBT0JnTlZCQWNUQjBKbAphVXBwYm1jeEREQUtCZ05WQkFvVEEyczRjekVQTUEwR0ExVUVDeE1HVTNsemRHVnRNUk13RVFZRFZRUURFd3ByCmRXSmxjbTVsZEdWek1CNFhEVEU0TURJeE1qQXdNemN3TUZvWERUSXpNREl4TVRBd016Y3dNRm93WlRFTE1Ba0cKQTFVRUJoTUNRMDR4RURBT0JnTlZCQWdUQjBKbGFVcHBibWN4RURBT0JnTlZCQWNUQjBKbGFVcHBibWN4RERBSwpCZ05WQkFvVEEyczRjekVQTUEwR0ExVUVDeE1HVTNsemRHVnRNUk13RVFZRFZRUURFd3ByZFdKbGNtNWxkR1Z6Ck1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBcmQzYUNlVzI0V3AyMVZCRDVXamgKcFNFcXBDYnVTQ2l0R0k4Ty9MKzlFQ1lpYm14YjZ0ay8yUWF6bkRSejVNQnlNb2V4ajZaSjNtU1diR3Jwd1daZAo2aVIrNG02ZUtBb2tPUUtHaXlnbllXY21Qc3VKSWlDSmNBNGJLYVBTWWowVmRnOE9Vbm5YZVFLNU9TQzVib3hyClhzVmhDbDIzZEZtMElZZzZQdTRVcjBBZFQ5TXlUM1lHblhCYlR1djJUZ0dGWk1pWUp5UnZTbXdqc0VBcUR6L1kKV254bktIVmFkYkFqcHJ2SmRaRXVHNHAxMXZSS0tteXBvUjQ5aHFRblNSM1FSNmw5NEcyZGQzcDkzMDZ0eFExNgovRStIak5hVkhNSG9WUU1wbFRZYlI5Y3U4M3BmNytOMTlrTGFsMDhxU2ozZjhlU1ZaSE9OVDJzRmN0dEVDa0hWCjNRSURBUUFCbzJZd1pEQU9CZ05WSFE4QkFmOEVCQU1DQVFZd0VnWURWUjBUQVFIL0JBZ3dCZ0VCL3dJQkFqQWQKQmdOVkhRNEVGZ1FVTVBmTmtXazgxbGF1MFp0ZkZNUCt3QnVZOHl3d0h3WURWUjBqQkJnd0ZvQVVNUGZOa1drOAoxbGF1MFp0ZkZNUCt3QnVZOHl3d0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFHUDBRL1VmQ01uM0ZrQkdVRmZICmF6bGNsaVY4MkkzMm9UNURxWVl1bzdmeVBScjJpK1ZWSVBXVzVIUGNuWGNGSzdmR0E4T2NMejVpUVUvVzM4M0YKWnAzQTA1eDRkcnFqcUw4azdiVEo3aEZCOUM3akJ6U3RnbGVmdW9vTlVhV09QakEzZDYyTDN3UTFmUFIyd056LwozQ2lsYlNZb2MwRnZNVXdGWDErUWhRSWJ3UTdQaVRNeU5uKzc5di9tRFoyUGM4ZnRPTUdlekt2OHNpdGFVLzluClhGRWlzTmMrZTc1NGRZVDVCQ1dkNkprM1FWMHg3cVIzdXl6TUtERzQxNXRtN21zcyt1blpMaXhtRXc1eEJJOW4Ka2ZUZHE5RkJlazRiNkJQakErRVp0RmFZbzAxSEowbVppN1lIb05CODdRNUZjQnBORmZ3ZGliY0YzN1hDdlg2YwpMTTA9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K

---

# This manifest installs the calico/node container, as well
# as the Calico CNI plugins and network config on
# each master and worker node in a Kubernetes cluster.
kind: DaemonSet
apiVersion: extensions/v1beta1
metadata:
  name: calico-node
  namespace: kube-system
  labels:
    k8s-app: calico-node
spec:
  selector:
    matchLabels:
      k8s-app: calico-node
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
  template:
    metadata:
      labels:
        k8s-app: calico-node
      annotations:
        scheduler.alpha.kubernetes.io/critical-pod: ''
        scheduler.alpha.kubernetes.io/tolerations: |
          [{"key": "dedicated", "value": "master", "effect": "NoSchedule" },
           {"key":"CriticalAddonsOnly", "operator":"Exists"}]
    spec:
      hostNetwork: true
      serviceAccountName: calico-node
      # Minimize downtime during a rolling upgrade or deletion; tell Kubernetes to do a "force
      # deletion": https://kubernetes.io/docs/concepts/workloads/pods/pod/#termination-of-pods.
      terminationGracePeriodSeconds: 0
      containers:
        # Runs calico/node container on each Kubernetes node.  This
        # container programs network policy and routes on each
        # host.
        - name: calico-node
          image: quay.io/calico/node:v3.0.1
          env:
            # The location of the Calico etcd cluster.
            - name: ETCD_ENDPOINTS
              valueFrom:
                configMapKeyRef:
                  name: calico-config
                  key: etcd_endpoints
            # Choose the backend to use.
            - name: CALICO_NETWORKING_BACKEND
              valueFrom:
                configMapKeyRef:
                  name: calico-config
                  key: calico_backend
            # Cluster type to identify the deployment type
            - name: CLUSTER_TYPE
              value: "k8s,bgp"
            # Disable file logging so `kubectl logs` works.
            - name: CALICO_DISABLE_FILE_LOGGING
              value: "true"
            # Set noderef for node controller.
            - name: CALICO_K8S_NODE_REF
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            # Set Felix endpoint to host default action to ACCEPT.
            - name: FELIX_DEFAULTENDPOINTTOHOSTACTION
              value: "ACCEPT"
            # Configure the IP Pool from which Pod IPs will be chosen.
            - name: CALICO_IPV4POOL_CIDR
              value: "172.30.0.0/16"
            - name: CALICO_IPV4POOL_IPIP
              value: "Always"
            # Disable IPv6 on Kubernetes.
            - name: FELIX_IPV6SUPPORT
              value: "false"
            # Set Felix logging to "info"
            - name: FELIX_LOGSEVERITYSCREEN
              value: "info"
            # Set MTU for tunnel device used if ipip is enabled
            - name: FELIX_IPINIPMTU
              value: "1440"
            # Location of the CA certificate for etcd.
            - name: ETCD_CA_CERT_FILE
              valueFrom:
                configMapKeyRef:
                  name: calico-config
                  key: etcd_ca
            # Location of the client key for etcd.
            - name: ETCD_KEY_FILE
              valueFrom:
                configMapKeyRef:
                  name: calico-config
                  key: etcd_key
            # Location of the client certificate for etcd.
            - name: ETCD_CERT_FILE
              valueFrom:
                configMapKeyRef:
                  name: calico-config
                  key: etcd_cert
            # Auto-detect the BGP IP address.
            - name: IP
              value: "autodetect"
            - name: FELIX_HEALTHENABLED
              value: "true"
          securityContext:
            privileged: true
          resources:
            requests:
              cpu: 250m
          livenessProbe:
            httpGet:
              path: /liveness
              port: 9099
            periodSeconds: 10
            initialDelaySeconds: 10
            failureThreshold: 6
          readinessProbe:
            httpGet:
              path: /readiness
              port: 9099
            periodSeconds: 10
          volumeMounts:
            - mountPath: /lib/modules
              name: lib-modules
              readOnly: true
            - mountPath: /var/run/calico
              name: var-run-calico
              readOnly: false
            - mountPath: /calico-secrets
              name: etcd-certs
        # This container installs the Calico CNI binaries
        # and CNI network config file on each node.
        - name: install-cni
          image: quay.io/calico/cni:v2.0.0
          command: ["/install-cni.sh"]
          env:
            # Name of the CNI config file to create.
            - name: CNI_CONF_NAME
              value: "10-calico.conflist"
            # The location of the Calico etcd cluster.
            - name: ETCD_ENDPOINTS
              valueFrom:
                configMapKeyRef:
                  name: calico-config
                  key: etcd_endpoints
            # The CNI network config to install on each node.
            - name: CNI_NETWORK_CONFIG
              valueFrom:
                configMapKeyRef:
                  name: calico-config
                  key: cni_network_config
          volumeMounts:
            - mountPath: /host/opt/cni/bin
              name: cni-bin-dir
            - mountPath: /host/etc/cni/net.d
              name: cni-net-dir
            - mountPath: /calico-secrets
              name: etcd-certs
      volumes:
        # Used by calico/node.
        - name: lib-modules
          hostPath:
            path: /lib/modules
        - name: var-run-calico
          hostPath:
            path: /var/run/calico
        # Used to install CNI.
        - name: cni-bin-dir
          hostPath:
            path: /opt/cni/bin
        - name: cni-net-dir
          hostPath:
            path: /etc/cni/net.d
        # Mount in the etcd TLS secrets.
        - name: etcd-certs
          secret:
            secretName: calico-etcd-secrets

---

# This manifest deploys the Calico Kubernetes controllers.
# See https://github.com/projectcalico/kube-controllers
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: calico-kube-controllers
  namespace: kube-system
  labels:
    k8s-app: calico-kube-controllers
  annotations:
    scheduler.alpha.kubernetes.io/critical-pod: ''
    scheduler.alpha.kubernetes.io/tolerations: |
      [{"key": "dedicated", "value": "master", "effect": "NoSchedule" },
       {"key":"CriticalAddonsOnly", "operator":"Exists"}]
spec:
  # The controllers can only have a single active instance.
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      name: calico-kube-controllers
      namespace: kube-system
      labels:
        k8s-app: calico-kube-controllers
    spec:
      # The controllers must run in the host network namespace so that
      # it isn't governed by policy that would prevent it from working.
      hostNetwork: true
      serviceAccountName: calico-kube-controllers
      containers:
        - name: calico-kube-controllers
          image: quay.io/calico/kube-controllers:v2.0.0
          env:
            # The location of the Calico etcd cluster.
            - name: ETCD_ENDPOINTS
              valueFrom:
                configMapKeyRef:
                  name: calico-config
                  key: etcd_endpoints
            # Location of the CA certificate for etcd.
            - name: ETCD_CA_CERT_FILE
              valueFrom:
                configMapKeyRef:
                  name: calico-config
                  key: etcd_ca
            # Location of the client key for etcd.
            - name: ETCD_KEY_FILE
              valueFrom:
                configMapKeyRef:
                  name: calico-config
                  key: etcd_key
            # Location of the client certificate for etcd.
            - name: ETCD_CERT_FILE
              valueFrom:
                configMapKeyRef:
                  name: calico-config
                  key: etcd_cert
            # Choose which controllers to run.
            - name: ENABLED_CONTROLLERS
              value: policy,profile,workloadendpoint,node
          volumeMounts:
            # Mount in the etcd TLS secrets.
            - mountPath: /calico-secrets
              name: etcd-certs
      volumes:
        # Mount in the etcd TLS secrets.
        - name: etcd-certs
          secret:
            secretName: calico-etcd-secrets

---

apiVersion: v1
kind: ServiceAccount
metadata:
  name: calico-kube-controllers
  namespace: kube-system

---

apiVersion: v1
kind: ServiceAccount
metadata:
  name: calico-node
  namespace: kube-system
