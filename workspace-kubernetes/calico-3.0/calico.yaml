# Calico Version v3.0.1
# https://docs.projectcalico.org/v3.0/releases#v3.0.1
# This manifest includes the following component versions:
#   calico/node:v3.0.1
#   calico/cni:v2.0.0
#   calico/kube-controllers:v2.0.0

# This ConfigMap is used to configure a self-hosted Calico installation.
kind: ConfigMap
apiVersion: v1
metadata:
  name: calico-config
  namespace: kube-system
data:
  # Configure this with the location of your etcd cluster.
  etcd_endpoints: "https://172.31.78.215:2379,https://172.31.78.216:2379,https://172.31.78.217:2379"

  # Configure the Calico backend to use.
  calico_backend: "bird"

  # The CNI network configuration to install on each node.
  cni_network_config: |-
    {
      "name": "k8s-pod-network",
      "cniVersion": "0.3.0",
      "plugins": [
        {
            "type": "calico",
            "etcd_endpoints": "__ETCD_ENDPOINTS__",
            "etcd_key_file": "__ETCD_KEY_FILE__",
            "etcd_cert_file": "__ETCD_CERT_FILE__",
            "etcd_ca_cert_file": "__ETCD_CA_CERT_FILE__",
            "log_level": "info",
            "mtu": 1500,
            "ipam": {
                "type": "calico-ipam"
            },
            "policy": {
                "type": "k8s",
                "k8s_api_root": "https://__KUBERNETES_SERVICE_HOST__:__KUBERNETES_SERVICE_PORT__",
                "k8s_auth_token": "__SERVICEACCOUNT_TOKEN__"
            },
            "kubernetes": {
                "kubeconfig": "__KUBECONFIG_FILEPATH__"
            }
        },
        {
          "type": "portmap",
          "snat": true,
          "capabilities": {"portMappings": true}
        }
      ]
    }

  # If you're using TLS enabled etcd uncomment the following.
  # You must also populate the Secret below with these files.
  etcd_ca: "/calico-secrets/etcd-ca"
  etcd_cert: "/calico-secrets/etcd-cert"
  etcd_key: "/calico-secrets/etcd-key"

---

# The following contains k8s Secrets for use with a TLS enabled etcd cluster.
# For information on populating Secrets, see http://kubernetes.io/docs/user-guide/secrets/
apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: calico-etcd-secrets
  namespace: kube-system
data:
  # Populate the following files with etcd TLS configuration if desired, but leave blank if
  # not using TLS for etcd.
  # This self-hosted install expects three files with the following names.  The values
  # should be base64 encoded strings of the entire contents of each file.
  # etcd-key: null
  # etcd-cert: null
  # etcd-ca: null
  etcd-key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBbzJrbGFjWHd3eVkrdXFGdlN3TTRCOVBpdkRqNVF6MHhEZ2xEb2Z5R0paZ0lkMkRiCmVGNmFOejhVVWhteFhKQjYrSkZwWVM5TkwvK0hUY1Zid2xwVEkwUGhQbjVqZW84ZGVxQmhESXNWYVVQUXZKeXEKNVBUazZsS3Zrek9ZQ2ROdmIrMW5QWVpnd1U4WnBTSUR6NjMyQ1U1ejlTMm15aFdXMWFVRlFTRzdKN1d5Y3QrbApSZ2tNdkVhSWJ4MzhkT2xaMTdvWGhtZjNYaHlWK21icVNMcGgwMVA5UFMrbXZzVlNQcVowM25ZS2V5bjhnWjlpCmt6MGhpVjN3ZmR3dHRxUmE1VitmL1Ywd08rVnhaUE5RZy9VMTJUMVhEanRQK1ZKb0Jha0tSaFkvdUk2VzNGRjYKdTdNVG9FM3l5Y2pBVCtObWNmK0VZVFlISWYzRkdUc1pPZHVMcXdJREFRQUJBb0lCQVFDTWVVMFNPbmlZS2Y1dQp6V3d3M2RtQzBTRHVrVU9tQzZwcDJJanRiWG1jUTYremYrM3E4ZGc4ZWR0c0lHNFpscEkvc0RFWXZHTHNTZ3YwClRSNXVXdHR4UzE4TUsvWTBXMmNLRFdpZ01jZjhMN0gzRWU3TzE3OFp1Rzc2YWJYZmJJVTFnSzNwYytVbENHeVIKU2taZ2Q3a3prdCtYK3VDUWhES2dBalljSVhVVDBud2JTeTdrWDkwYlU4ZEVNeHZyWS9oaXgvY08wcG9adlRkWQp3MTNYNEpIVG9WQS90YUVwdlRGeWVhcVkraWNRYUczdnZYZWZPUlFaQ0FlN3htN0RwdkZjcWg2QTd0ZmJMVlRGCkZ1OFZvN2dDemlXb003cTQyUjcvK1dvQ3Q2eFo3bWx6RnNQZEYvcFFjN2FmT2ZVcnlPSFdoZXAzSDlpSzFZTFEKNENCU1lSNFJBb0dCQU5oTUtxK3VjYVE1Z21VYUExdGN3QStEVDk0bmtmMlpGMFhwWEtBQ3FVSlZ4Vkp6dUJYUgp3eFRUQVJiWnE2UkxwZ2tKNDJZTGZTczlkMWY1dmFmVjc2WExBWWd5R3hjUzRFbFdmRDJlKy9rZHluYUlubllmCkhsdWJTUFBHanMxTHVMTDRzaU84SXNCVWM5eDlHUmxFNmRDRHBObE93RVFVNWZ2cCs4TVBocEQzQW9HQkFNRm4KMDEzeFVGbjdsbEJJSkkvYUo0S1hGVHZiWTNRYUNIWWI2bERXczFxMC9Tc3lJbGdMLzBvK3c2dSsySTdldkFYQQpnNGFMOGdEMHlxb3p4WHcrZklDcXdFUHQvSWFwV0xHVEE5aWc3WlF6cnF5THlVY3RyV2E4ZVhpQy9qanJCTndjCnNiRjZwd1ZVRHVrcURKTlhYQUJhczlYVGtkRnZNcHN0NkQya3hLSHRBb0dBVHZ3aGFsNE5hYWNHa3R6WTlQZjkKdXF4ODhlY0pUTTRtellUV0tpaE9uc2FyYzl5R0VKRzA1MW5XUC8za3krNUVCM0R3OVVha3dyR0RiMERubk81bQp3T2hNK3VzeE1VL1hUM0NobGU4RW5JZmdjMENZZlJJSUIvUEF4Q1J4NlU0SmVIR1F1N1BzRE1mS04yNEhTRTcrCkF3TFBvL3M2QXFLUENWcjhjTkt1bFNrQ2dZQldTWE1reTMvVTFZa25namhGc2NmRTNKRU5wb0RGa01QTHBnS3gKVkVpcXBHcjdOWi9hOW1kTWdab2M2c1dGWUZ3MG1NSlZhZVJyaHN0UWlrNkdjdjVyRFVOQVMxSko1ZzM3RTZNNApwL3UzRGlQVk9YeHdkREdUejJ6R1ZuTURnOThrTU8wYVNLVnhuQ0lXNXJxN2xkTW5HVkI0aXE3WTZLcUVUMFA1CkZLVGh0UUtCZ1FDaVVwcllOckUxS3ErMVo0S1p4cG8vS084QlFkdmx5b0hVbk1lZ3RObGRRdzBvODExaWR3M1AKbXlBYW5IVS9TY1YyRkkyL203T0hTS29IUWJ2ZmdKOThnRGxvN00vaDZLc2wwTmVVYmwxVzVhdVdsUHg5b1dTTAowRXNxUk5BTk5oRC9iOFUyZmUzVXBObExjL1pId3Yya2F2YWE5NjE1allaajRSUFhxUEpaMGc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo= 
  etcd-cert: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUQ5akNDQXQ2Z0F3SUJBZ0lVT2NGS29wZ3VBaktlbEpuaG1zcGtSWTFMS0lBd0RRWUpLb1pJaHZjTkFRRUwKQlFBd1pURUxNQWtHQTFVRUJoTUNRMDR4RURBT0JnTlZCQWdUQjBKbGFVcHBibWN4RURBT0JnTlZCQWNUQjBKbAphVXBwYm1jeEREQUtCZ05WQkFvVEEyczRjekVQTUEwR0ExVUVDeE1HVTNsemRHVnRNUk13RVFZRFZRUURFd3ByCmRXSmxjbTVsZEdWek1CNFhEVEU0TURJd05qQXlORGN3TUZvWERUSTRNREl3TkRBeU5EY3dNRm93WHpFTE1Ba0cKQTFVRUJoTUNRMDR4RURBT0JnTlZCQWdUQjBKbGFVcHBibWN4RURBT0JnTlZCQWNUQjBKbGFVcHBibWN4RERBSwpCZ05WQkFvVEEyczRjekVQTUEwR0ExVUVDeE1HVTNsemRHVnRNUTB3Q3dZRFZRUURFd1JsZEdOa01JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQW8ya2xhY1h3d3lZK3VxRnZTd000QjlQaXZEajUKUXoweERnbERvZnlHSlpnSWQyRGJlRjZhTno4VVVobXhYSkI2K0pGcFlTOU5MLytIVGNWYndscFRJMFBoUG41agplbzhkZXFCaERJc1ZhVVBRdkp5cTVQVGs2bEt2a3pPWUNkTnZiKzFuUFlaZ3dVOFpwU0lEejYzMkNVNXo5UzJtCnloV1cxYVVGUVNHN0o3V3ljdCtsUmdrTXZFYUlieDM4ZE9sWjE3b1hobWYzWGh5VittYnFTTHBoMDFQOVBTK20KdnNWU1BxWjAzbllLZXluOGdaOWlrejBoaVYzd2Zkd3R0cVJhNVYrZi9WMHdPK1Z4WlBOUWcvVTEyVDFYRGp0UAorVkpvQmFrS1JoWS91STZXM0ZGNnU3TVRvRTN5eWNqQVQrTm1jZitFWVRZSElmM0ZHVHNaT2R1THF3SURBUUFCCm80R2pNSUdnTUE0R0ExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUIKQlFVSEF3SXdEQVlEVlIwVEFRSC9CQUl3QURBZEJnTlZIUTRFRmdRVTlEc1hHYTFrSG1EUHZvWWV3QWVFeXVETAp6L1F3SHdZRFZSMGpCQmd3Rm9BVXMzRCtabWIwZjNyUFVPN3FKVVhQWVRmOWFad3dJUVlEVlIwUkJCb3dHSWNFCmZ3QUFBWWNFckI5TzE0Y0VyQjlPMkljRXJCOU8yVEFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBVGtsZ0VOdXQKRVBYYzVWbnBLbmNieFBhOHVHb3lhbXhKV0dWTTZhMjR0WVN1NUs4ZG9mMS9Dams3UGZ2OGtqNS9MdXdZUU5nbwpta0dYcVRiRXRKdWwvajlGdzcwYlo5YkFxL1NBMFRFOHlicTAwelRIRzFsRUxwa1J2bHZQVnBGVXRGelFRMGpCCkhUTjNUa1ltNDhoSlBwWHhRWFUycHhwMGFCVm9YOFVScThlMHlJV1Q3MkRTVGVXV3lEVmpIMWNUYk9jYzNDcXAKSUhGNXRmRzB6YzZTMDlTZ1ZIK0s3WXZiUlFKZU9UTVhBaDhHdzFPWUxpZ0JjYlJ3bVIvamtxYy9rRXU1MXZFawpESFVLNUk0T1BPSGVyRjdjam5yeTN2d2ZNNEZEZzE4emhGNEQzeFBvZmNBTzJ0Tzh6VkNFVFVXSnNlK0JTUkdZCi9iYUxPemd5STE2SS93PT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo= 
  etcd-ca: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUR2akNDQXFhZ0F3SUJBZ0lVSHBMUGNPWXY0eC90bHZBbCtibEw0TC9SVTRJd0RRWUpLb1pJaHZjTkFRRUwKQlFBd1pURUxNQWtHQTFVRUJoTUNRMDR4RURBT0JnTlZCQWdUQjBKbGFVcHBibWN4RURBT0JnTlZCQWNUQjBKbAphVXBwYm1jeEREQUtCZ05WQkFvVEEyczRjekVQTUEwR0ExVUVDeE1HVTNsemRHVnRNUk13RVFZRFZRUURFd3ByCmRXSmxjbTVsZEdWek1CNFhEVEU0TURJd05qQXlNell3TUZvWERUSXpNREl3TlRBeU16WXdNRm93WlRFTE1Ba0cKQTFVRUJoTUNRMDR4RURBT0JnTlZCQWdUQjBKbGFVcHBibWN4RURBT0JnTlZCQWNUQjBKbGFVcHBibWN4RERBSwpCZ05WQkFvVEEyczRjekVQTUEwR0ExVUVDeE1HVTNsemRHVnRNUk13RVFZRFZRUURFd3ByZFdKbGNtNWxkR1Z6Ck1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBdGN5SG96aTlGSUJtL0FIYmJ2N0gKaUZWdDlSVjhGeDFuMmREYkZHTDV3V2liMFo4RVpCNmZ1MHY1K3FRZUg0UDlEYzdFOVM0ZkJhbW1landhQVVLVgp3cURycHFlcEMzWTdqK3FlR25naC8rbko3WXllNEIyOHZrcDRhL3FnMkZWTW90MUFTRm53Tll5Tm9aY254ZjArCjE4ZExYYlRYNlZudFFXK1MyMW95VEsrdEJVY2pGbmp2MmV5a0xDaDVweVJIaitmeGluQ1FmREhmejNkempwbSsKRE9rU2lGMXFzejh4cUZzQWNvQmRoWmlzMyt4YlBsMjU4dEE1N2hFVU56YzhRdFAvek94V2d4cmpzUjc3YS91UApSQ09rUkpPcjVhQnI2eUY3bmY2MHdCYVh1ck91cU53aEFmMXVKbXp6VlE2ZmhWRTRwY2YzK3BGbUdHdUF4QXVyCnp3SURBUUFCbzJZd1pEQU9CZ05WSFE4QkFmOEVCQU1DQVFZd0VnWURWUjBUQVFIL0JBZ3dCZ0VCL3dJQkFqQWQKQmdOVkhRNEVGZ1FVczNEK1ptYjBmM3JQVU83cUpVWFBZVGY5YVp3d0h3WURWUjBqQkJnd0ZvQVVzM0QrWm1iMApmM3JQVU83cUpVWFBZVGY5YVp3d0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFESnMyYVFQbFJHekgxTW0wZWRqCkJMdmpKY01kKytFT3EzNTRGMkhia3g5eXkxUXNFWGZsa2lBdDVJZTA2cXUzbzFjMzluSGplUmJtZzlyNFVlTGoKS29EUFNoVjR5S0F4K3ZaZTNCUS9MYzkxRjljK1lyQzhSRzdJd3pxVndIaUxmOHlRWlN5eGZlT0txTFdpMkdRdgptYTdSeERMbWJSL3Y1akozYzJyT2lpZG9wNXU3dVcwSzljRkdnTXdrRlZjUm9IYmlHNHJnZ1NLUnozVzUzYUZpCmsvSk5EcWR5emJ5RjFMVVQyZVFIMkhvMTh3RjNNcml5TmlTNUl2Wld1cVE4ZUcyZ3QzS05HSkVDSitQeGdIK3MKejh3M1dDUjAyaFpoa0lsWU1aMkFxLzRaaXkySmZ5K0ZlTnp6K1BkUExubGNjaTFmdVdDL011cjdrOURNODBCNQpVems9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K 

---

# This manifest installs the calico/node container, as well
# as the Calico CNI plugins and network config on
# each master and worker node in a Kubernetes cluster.
kind: DaemonSet
apiVersion: extensions/v1beta1
metadata:
  name: calico-node
  namespace: kube-system
  labels:
    k8s-app: calico-node
spec:
  selector:
    matchLabels:
      k8s-app: calico-node
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
  template:
    metadata:
      labels:
        k8s-app: calico-node
      annotations:
        scheduler.alpha.kubernetes.io/critical-pod: ''
        scheduler.alpha.kubernetes.io/tolerations: |
          [{"key": "dedicated", "value": "master", "effect": "NoSchedule" },
           {"key":"CriticalAddonsOnly", "operator":"Exists"}]
    spec:
      hostNetwork: true
      serviceAccountName: calico-node
      # Minimize downtime during a rolling upgrade or deletion; tell Kubernetes to do a "force
      # deletion": https://kubernetes.io/docs/concepts/workloads/pods/pod/#termination-of-pods.
      terminationGracePeriodSeconds: 0
      containers:
        # Runs calico/node container on each Kubernetes node.  This
        # container programs network policy and routes on each
        # host.
        - name: calico-node
          image: quay.io/calico/node:v3.0.1
          env:
            # The location of the Calico etcd cluster.
            - name: ETCD_ENDPOINTS
              valueFrom:
                configMapKeyRef:
                  name: calico-config
                  key: etcd_endpoints
            # Choose the backend to use.
            - name: CALICO_NETWORKING_BACKEND
              valueFrom:
                configMapKeyRef:
                  name: calico-config
                  key: calico_backend
            # Cluster type to identify the deployment type
            - name: CLUSTER_TYPE
              value: "k8s,bgp"
            # Disable file logging so `kubectl logs` works.
            - name: CALICO_DISABLE_FILE_LOGGING
              value: "true"
            # Set noderef for node controller.
            - name: CALICO_K8S_NODE_REF
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            # Set Felix endpoint to host default action to ACCEPT.
            - name: FELIX_DEFAULTENDPOINTTOHOSTACTION
              value: "ACCEPT"
            # Configure the IP Pool from which Pod IPs will be chosen.
            - name: CALICO_IPV4POOL_CIDR
              value: "172.30.0.0/16"
            - name: CALICO_IPV4POOL_IPIP
              value: "Always"
            # Disable IPv6 on Kubernetes.
            - name: FELIX_IPV6SUPPORT
              value: "false"
            # Set Felix logging to "info"
            - name: FELIX_LOGSEVERITYSCREEN
              value: "info"
            # Set MTU for tunnel device used if ipip is enabled
            - name: FELIX_IPINIPMTU
              value: "1440"
            # Location of the CA certificate for etcd.
            - name: ETCD_CA_CERT_FILE
              valueFrom:
                configMapKeyRef:
                  name: calico-config
                  key: etcd_ca
            # Location of the client key for etcd.
            - name: ETCD_KEY_FILE
              valueFrom:
                configMapKeyRef:
                  name: calico-config
                  key: etcd_key
            # Location of the client certificate for etcd.
            - name: ETCD_CERT_FILE
              valueFrom:
                configMapKeyRef:
                  name: calico-config
                  key: etcd_cert
            # Auto-detect the BGP IP address.
            - name: IP
              value: "autodetect"
            - name: FELIX_HEALTHENABLED
              value: "true"
          securityContext:
            privileged: true
          resources:
            requests:
              cpu: 250m
          livenessProbe:
            httpGet:
              path: /liveness
              port: 9099
            periodSeconds: 10
            initialDelaySeconds: 10
            failureThreshold: 6
          readinessProbe:
            httpGet:
              path: /readiness
              port: 9099
            periodSeconds: 10
          volumeMounts:
            - mountPath: /lib/modules
              name: lib-modules
              readOnly: true
            - mountPath: /var/run/calico
              name: var-run-calico
              readOnly: false
            - mountPath: /calico-secrets
              name: etcd-certs
        # This container installs the Calico CNI binaries
        # and CNI network config file on each node.
        - name: install-cni
          image: quay.io/calico/cni:v2.0.0
          command: ["/install-cni.sh"]
          env:
            # Name of the CNI config file to create.
            - name: CNI_CONF_NAME
              value: "10-calico.conflist"
            # The location of the Calico etcd cluster.
            - name: ETCD_ENDPOINTS
              valueFrom:
                configMapKeyRef:
                  name: calico-config
                  key: etcd_endpoints
            # The CNI network config to install on each node.
            - name: CNI_NETWORK_CONFIG
              valueFrom:
                configMapKeyRef:
                  name: calico-config
                  key: cni_network_config
          volumeMounts:
            - mountPath: /host/opt/cni/bin
              name: cni-bin-dir
            - mountPath: /host/etc/cni/net.d
              name: cni-net-dir
            - mountPath: /calico-secrets
              name: etcd-certs
      volumes:
        # Used by calico/node.
        - name: lib-modules
          hostPath:
            path: /lib/modules
        - name: var-run-calico
          hostPath:
            path: /var/run/calico
        # Used to install CNI.
        - name: cni-bin-dir
          hostPath:
            path: /opt/cni/bin
        - name: cni-net-dir
          hostPath:
            path: /etc/cni/net.d
        # Mount in the etcd TLS secrets.
        - name: etcd-certs
          secret:
            secretName: calico-etcd-secrets

---

# This manifest deploys the Calico Kubernetes controllers.
# See https://github.com/projectcalico/kube-controllers
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: calico-kube-controllers
  namespace: kube-system
  labels:
    k8s-app: calico-kube-controllers
  annotations:
    scheduler.alpha.kubernetes.io/critical-pod: ''
    scheduler.alpha.kubernetes.io/tolerations: |
      [{"key": "dedicated", "value": "master", "effect": "NoSchedule" },
       {"key":"CriticalAddonsOnly", "operator":"Exists"}]
spec:
  # The controllers can only have a single active instance.
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      name: calico-kube-controllers
      namespace: kube-system
      labels:
        k8s-app: calico-kube-controllers
    spec:
      # The controllers must run in the host network namespace so that
      # it isn't governed by policy that would prevent it from working.
      hostNetwork: true
      serviceAccountName: calico-kube-controllers
      containers:
        - name: calico-kube-controllers
          image: quay.io/calico/kube-controllers:v2.0.0
          env:
            # The location of the Calico etcd cluster.
            - name: ETCD_ENDPOINTS
              valueFrom:
                configMapKeyRef:
                  name: calico-config
                  key: etcd_endpoints
            # Location of the CA certificate for etcd.
            - name: ETCD_CA_CERT_FILE
              valueFrom:
                configMapKeyRef:
                  name: calico-config
                  key: etcd_ca
            # Location of the client key for etcd.
            - name: ETCD_KEY_FILE
              valueFrom:
                configMapKeyRef:
                  name: calico-config
                  key: etcd_key
            # Location of the client certificate for etcd.
            - name: ETCD_CERT_FILE
              valueFrom:
                configMapKeyRef:
                  name: calico-config
                  key: etcd_cert
            # Choose which controllers to run.
            - name: ENABLED_CONTROLLERS
              value: policy,profile,workloadendpoint,node
          volumeMounts:
            # Mount in the etcd TLS secrets.
            - mountPath: /calico-secrets
              name: etcd-certs
      volumes:
        # Mount in the etcd TLS secrets.
        - name: etcd-certs
          secret:
            secretName: calico-etcd-secrets

---

apiVersion: v1
kind: ServiceAccount
metadata:
  name: calico-kube-controllers
  namespace: kube-system

---

apiVersion: v1
kind: ServiceAccount
metadata:
  name: calico-node
  namespace: kube-system
